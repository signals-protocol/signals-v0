{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x971F9bcE130743BB3eFb37aeAC2050cD44d7579a",
      "kind": "uups"
    },
    {
      "address": "0xe163497F304ad4b7482C84Bc82079d46050c6e93",
      "kind": "uups"
    },
    {
      "address": "0x59eb810fa5e7c0646902C29D9e8bfdaDf25Ce274",
      "kind": "uups"
    }
  ],
  "impls": {
    "f73b4285dff96193fe15be60ba84b736bbb6d134e8a0c859bdc0c47b272d1bb8": {
      "address": "0x80404B3230c2Bd9f2e88fa03f0C14728Cef4083A",
      "layout": {
        "solcVersion": "0.8.30",
        "storage": [
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2887",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:12"
          },
          {
            "label": "positionContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ICLMSRPosition)23741",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:13"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Market)23172_storage)",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:13"
          },
          {
            "label": "marketTrees",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(Tree)23937_storage)",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:14"
          },
          {
            "label": "_nextMarketId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:16"
          },
          {
            "label": "positionSettledEmitted",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:17"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_uint256)47_storage",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)632_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)708_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_contract(ICLMSRPosition)23741": {
            "label": "contract ICLMSRPosition",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2887": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)23172_storage)": {
            "label": "mapping(uint256 => struct ICLMSRMarketCore.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tree)23937_storage)": {
            "label": "mapping(uint256 => struct LazyMulSegmentTree.Tree)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Node)23922_storage)": {
            "label": "mapping(uint32 => struct LazyMulSegmentTree.Node)",
            "numberOfBytes": "32"
          },
          "t_struct(Market)23172_storage": {
            "label": "struct ICLMSRMarketCore.Market",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint64",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "settlementTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tickSpacing",
                "type": "t_int256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "numBins",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "liquidityParameter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "positionEventsCursor",
                "type": "t_uint32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "positionEventsEmitted",
                "type": "t_bool",
                "offset": 4,
                "slot": "7"
              },
              {
                "label": "settlementValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "settlementTimestamp",
                "type": "t_uint64",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Node)23922_storage": {
            "label": "struct LazyMulSegmentTree.Node",
            "members": [
              {
                "label": "sum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pendingFactor",
                "type": "t_uint192",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "childPtr",
                "type": "t_uint64",
                "offset": 24,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tree)23937_storage": {
            "label": "struct LazyMulSegmentTree.Tree",
            "members": [
              {
                "label": "nodes",
                "type": "t_mapping(t_uint32,t_struct(Node)23922_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextIndex",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "cachedRootSum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b848f1b90089d098a2b7e36a4aa2b0842e057bcadf3d6f6ed3ac7d69e78a09c6": {
      "address": "0xB6490F3142b49B9e8fF93510cF29bc330088AFC5",
      "layout": {
        "solcVersion": "0.8.30",
        "storage": [
          {
            "label": "core",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:30"
          },
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:33"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:36"
          },
          {
            "label": "_positions",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(Position)23641_storage)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:39"
          },
          {
            "label": "_ownedTokensSlot",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:42"
          },
          {
            "label": "_marketTokenList",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:46"
          },
          {
            "label": "_positionMarket",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:47"
          },
          {
            "label": "_positionMarketIndex",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)47_storage",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)279_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)23641_storage)": {
            "label": "mapping(uint256 => struct ICLMSRPosition.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Position)23641_storage": {
            "label": "struct ICLMSRPosition.Position",
            "members": [
              {
                "label": "marketId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lowerTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "upperTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "quantity",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "createdAt",
                "type": "t_uint64",
                "offset": 16,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0xB6490F3142b49B9e8fF93510cF29bc330088AFC5",
        "0x18D69E8F927bC93865f6A70Df892A03AEfe74771"
      ]
    },
    "864e5df554d20b067fb60aa6f7dee8ad3bdf1003ade03d060575568066e7348e": {
      "address": "0x979Dc7543B3752f9472C60262DadaeaE0FcAb5F0",
      "layout": {
        "solcVersion": "0.8.30",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x979Dc7543B3752f9472C60262DadaeaE0FcAb5F0",
        "0xd5fcCf0d35a587960B897914125Eb8785e26bD39"
      ]
    },
    "bdab163ab5d9d131256477245f56079983ab7d56d9a2665a77e3b0d9fe552dba": {
      "address": "0x58940701Ec3503935590B1DC5a3501b220E831AC",
      "txHash": "0x10f7c179c4ae12ade0ea080759e1984fea9d16611501193048972774951c196d",
      "layout": {
        "solcVersion": "0.8.30",
        "storage": [
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2887",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:12"
          },
          {
            "label": "positionContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ICLMSRPosition)23741",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:13"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Market)23172_storage)",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:13"
          },
          {
            "label": "marketTrees",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(Tree)23937_storage)",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:14"
          },
          {
            "label": "_nextMarketId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:16"
          },
          {
            "label": "positionSettledEmitted",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:17"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_uint256)47_storage",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)632_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)708_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_contract(ICLMSRPosition)23741": {
            "label": "contract ICLMSRPosition",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2887": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)23172_storage)": {
            "label": "mapping(uint256 => struct ICLMSRMarketCore.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tree)23937_storage)": {
            "label": "mapping(uint256 => struct LazyMulSegmentTree.Tree)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Node)23922_storage)": {
            "label": "mapping(uint32 => struct LazyMulSegmentTree.Node)",
            "numberOfBytes": "32"
          },
          "t_struct(Market)23172_storage": {
            "label": "struct ICLMSRMarketCore.Market",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint64",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "settlementTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tickSpacing",
                "type": "t_int256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "numBins",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "liquidityParameter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "positionEventsCursor",
                "type": "t_uint32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "positionEventsEmitted",
                "type": "t_bool",
                "offset": 4,
                "slot": "7"
              },
              {
                "label": "settlementValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "settlementTimestamp",
                "type": "t_uint64",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Node)23922_storage": {
            "label": "struct LazyMulSegmentTree.Node",
            "members": [
              {
                "label": "sum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pendingFactor",
                "type": "t_uint192",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "childPtr",
                "type": "t_uint64",
                "offset": 24,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tree)23937_storage": {
            "label": "struct LazyMulSegmentTree.Tree",
            "members": [
              {
                "label": "nodes",
                "type": "t_mapping(t_uint32,t_struct(Node)23922_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextIndex",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "cachedRootSum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0a3647d14f0a9081d09ec495096a8e352f9d87be0a74261d7fd8c51cbb36a884": {
      "address": "0x58940701Ec3503935590B1DC5a3501b220E831AC",
      "layout": {
        "solcVersion": "0.8.30",
        "storage": [
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1767",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:12"
          },
          {
            "label": "positionContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ICLMSRPosition)21861",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:13"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Market)21278_storage)",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:13"
          },
          {
            "label": "marketTrees",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(Tree)22057_storage)",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:14"
          },
          {
            "label": "_nextMarketId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:16"
          },
          {
            "label": "positionSettledEmitted",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:17"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_uint256)47_storage",
            "contract": "CLMSRMarketCoreStorage",
            "src": "contracts/core/storage/CLMSRMarketCoreStorage.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)264_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)340_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_contract(ICLMSRPosition)21861": {
            "label": "contract ICLMSRPosition",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)1767": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)21278_storage)": {
            "label": "mapping(uint256 => struct ICLMSRMarketCore.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tree)22057_storage)": {
            "label": "mapping(uint256 => struct LazyMulSegmentTree.Tree)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Node)22042_storage)": {
            "label": "mapping(uint32 => struct LazyMulSegmentTree.Node)",
            "numberOfBytes": "32"
          },
          "t_struct(Market)21278_storage": {
            "label": "struct ICLMSRMarketCore.Market",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint64",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "settlementTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tickSpacing",
                "type": "t_int256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "numBins",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "liquidityParameter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "positionEventsCursor",
                "type": "t_uint32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "positionEventsEmitted",
                "type": "t_bool",
                "offset": 4,
                "slot": "7"
              },
              {
                "label": "settlementValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "settlementTimestamp",
                "type": "t_uint64",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Node)22042_storage": {
            "label": "struct LazyMulSegmentTree.Node",
            "members": [
              {
                "label": "sum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pendingFactor",
                "type": "t_uint192",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "childPtr",
                "type": "t_uint64",
                "offset": 24,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tree)22057_storage": {
            "label": "struct LazyMulSegmentTree.Tree",
            "members": [
              {
                "label": "nodes",
                "type": "t_mapping(t_uint32,t_struct(Node)22042_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextIndex",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "cachedRootSum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
