{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x971F9bcE130743BB3eFb37aeAC2050cD44d7579a",
      "kind": "uups"
    },
    {
      "address": "0xe163497F304ad4b7482C84Bc82079d46050c6e93",
      "kind": "uups"
    },
    {
      "address": "0x59eb810fa5e7c0646902C29D9e8bfdaDf25Ce274",
      "kind": "uups"
    }
  ],
  "impls": {
    "e3050c738ae32a1703464cb7248ee26f7a3d575f30fd646b6c32e4e24e5b2f9c": {
      "address": "0x00794120961E4D08346f64F2A620860bC9E2417B",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2739",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:68"
          },
          {
            "label": "positionContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ICLMSRPosition)24392",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:71"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Market)23806_storage)",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:76"
          },
          {
            "label": "marketTrees",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(Tree)24948_storage)",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:79"
          },
          {
            "label": "_nextMarketId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:82"
          },
          {
            "label": "positionSettledEmitted",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:86"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)48_storage",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)559_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)623_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_contract(ICLMSRPosition)24392": {
            "label": "contract ICLMSRPosition",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2739": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)23806_storage)": {
            "label": "mapping(uint256 => struct ICLMSRMarketCore.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tree)24948_storage)": {
            "label": "mapping(uint256 => struct LazyMulSegmentTree.Tree)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Node)24933_storage)": {
            "label": "mapping(uint32 => struct LazyMulSegmentTree.Node)",
            "numberOfBytes": "32"
          },
          "t_struct(Market)23806_storage": {
            "label": "struct ICLMSRMarketCore.Market",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint64",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "settlementTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tickSpacing",
                "type": "t_int256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "numBins",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "liquidityParameter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "positionEventsCursor",
                "type": "t_uint32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "positionEventsEmitted",
                "type": "t_bool",
                "offset": 4,
                "slot": "7"
              },
              {
                "label": "settlementValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Node)24933_storage": {
            "label": "struct LazyMulSegmentTree.Node",
            "members": [
              {
                "label": "sum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pendingFactor",
                "type": "t_uint192",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "childPtr",
                "type": "t_uint64",
                "offset": 24,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tree)24948_storage": {
            "label": "struct LazyMulSegmentTree.Tree",
            "members": [
              {
                "label": "nodes",
                "type": "t_mapping(t_uint32,t_struct(Node)24933_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextIndex",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "cachedRootSum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8c7c2d79456b1645b0162bbd5abb8be8ea2ab53d431cc4308727f0871e376ecf": {
      "address": "0xC1BdbD391FeA333ff760cd74eb2b22Cc57993000",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "core",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:33"
          },
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:38"
          },
          {
            "label": "_positions",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(Position)24211_storage)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:40"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(UintSet)10534_storage)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:43"
          },
          {
            "label": "_marketTokenList",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:50"
          },
          {
            "label": "_positionMarket",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:51"
          },
          {
            "label": "_positionMarketIndex",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)47_storage",
            "contract": "CLMSRPosition",
            "src": "contracts/core/CLMSRPosition.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)240_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)10534_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Position)24211_storage)": {
            "label": "mapping(uint256 => struct ICLMSRPosition.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Position)24211_storage": {
            "label": "struct ICLMSRPosition.Position",
            "members": [
              {
                "label": "marketId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lowerTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "upperTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "quantity",
                "type": "t_uint128",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "createdAt",
                "type": "t_uint64",
                "offset": 16,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Set)9993_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)10534_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9993_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0xC1BdbD391FeA333ff760cd74eb2b22Cc57993000",
        "0x53E8d3A16f23f571229B1C791228cd9634070377",
        "0x22aea27dEc9aC7048E7f285932A28fC437a64c14"
      ]
    },
    "9379634d8942428c26234f6cf9663401660e704a50e9547f8a9f926b7618f730": {
      "address": "0x5fA83312300eb8f26253A1bEa798a7438B2fAF4d",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x5fA83312300eb8f26253A1bEa798a7438B2fAF4d",
        "0x7cD6e1cf9A09fC15a8e890FC54333Cf4589DB6fB"
      ]
    },
    "31295d7ed5062aac3a26e561c1d4c5aec2b4b3f96a23e45e524380db7d730940": {
      "address": "0xB53688102C2b5970EF8273476867182E6765640c",
      "txHash": "0xb2bfe99159e294e895aa4dfc2b21b4d02315c377b6757b4bf4b2a805b187c4c8",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)2739",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:68"
          },
          {
            "label": "positionContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ICLMSRPosition)24392",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:71"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Market)23806_storage)",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:76"
          },
          {
            "label": "marketTrees",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(Tree)24948_storage)",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:79"
          },
          {
            "label": "_nextMarketId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:82"
          },
          {
            "label": "positionSettledEmitted",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:86"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)48_storage",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)559_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)623_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_contract(ICLMSRPosition)24392": {
            "label": "contract ICLMSRPosition",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)2739": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)23806_storage)": {
            "label": "mapping(uint256 => struct ICLMSRMarketCore.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tree)24948_storage)": {
            "label": "mapping(uint256 => struct LazyMulSegmentTree.Tree)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Node)24933_storage)": {
            "label": "mapping(uint32 => struct LazyMulSegmentTree.Node)",
            "numberOfBytes": "32"
          },
          "t_struct(Market)23806_storage": {
            "label": "struct ICLMSRMarketCore.Market",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint64",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "settlementTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tickSpacing",
                "type": "t_int256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "numBins",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "liquidityParameter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "positionEventsCursor",
                "type": "t_uint32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "positionEventsEmitted",
                "type": "t_bool",
                "offset": 4,
                "slot": "7"
              },
              {
                "label": "settlementValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Node)24933_storage": {
            "label": "struct LazyMulSegmentTree.Node",
            "members": [
              {
                "label": "sum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pendingFactor",
                "type": "t_uint192",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "childPtr",
                "type": "t_uint64",
                "offset": 24,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tree)24948_storage": {
            "label": "struct LazyMulSegmentTree.Tree",
            "members": [
              {
                "label": "nodes",
                "type": "t_mapping(t_uint32,t_struct(Node)24933_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextIndex",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "cachedRootSum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ada7e6dd64df6e430ffc5d9084f847431f2d6b02f3c0ee41c5b3e3f1bb7a135e": {
      "address": "0xB53688102C2b5970EF8273476867182E6765640c",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "paymentToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1482",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:68"
          },
          {
            "label": "positionContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ICLMSRPosition)15114",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:71"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Market)14528_storage)",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:76"
          },
          {
            "label": "marketTrees",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(Tree)15670_storage)",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:79"
          },
          {
            "label": "_nextMarketId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:82"
          },
          {
            "label": "positionSettledEmitted",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:86"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)48_storage",
            "contract": "CLMSRMarketCore",
            "src": "contracts/core/CLMSRMarketCore.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_contract(ICLMSRPosition)15114": {
            "label": "contract ICLMSRPosition",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)1482": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)14528_storage)": {
            "label": "mapping(uint256 => struct ICLMSRMarketCore.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Tree)15670_storage)": {
            "label": "mapping(uint256 => struct LazyMulSegmentTree.Tree)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(Node)15655_storage)": {
            "label": "mapping(uint32 => struct LazyMulSegmentTree.Node)",
            "numberOfBytes": "32"
          },
          "t_struct(Market)14528_storage": {
            "label": "struct ICLMSRMarketCore.Market",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "settled",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint64",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint64",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "settlementTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxTick",
                "type": "t_int256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tickSpacing",
                "type": "t_int256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "numBins",
                "type": "t_uint32",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "liquidityParameter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "positionEventsCursor",
                "type": "t_uint32",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "positionEventsEmitted",
                "type": "t_bool",
                "offset": 4,
                "slot": "7"
              },
              {
                "label": "settlementValue",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Node)15655_storage": {
            "label": "struct LazyMulSegmentTree.Node",
            "members": [
              {
                "label": "sum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pendingFactor",
                "type": "t_uint192",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "childPtr",
                "type": "t_uint64",
                "offset": 24,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tree)15670_storage": {
            "label": "struct LazyMulSegmentTree.Tree",
            "members": [
              {
                "label": "nodes",
                "type": "t_mapping(t_uint32,t_struct(Node)15655_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "root",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextIndex",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "size",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "cachedRootSum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
